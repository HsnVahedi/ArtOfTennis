name: Build and Push Docker Images

on:
  pull_request:
    branches:
      - master

jobs:
  get-acr-name:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call Terraform Workflow to Get ACR Name
        id: call-terraform
        uses: ArtOfTennis/ArtOfTennis/.github/workflows/tf-gha-install-terraform.yml@main  # Reference the reusable workflow by repository and path
        with:
          TFAction: "output"
          dply_environment: ${{ needs.set-env-branch.outputs.config-file }}
          location: ${{ needs.get-config.outputs.location }}
          namespace: ${{ needs.get-config.outputs.namespace }}
          postfix: ${{ needs.get-config.outputs.postfix }}
          environment: ${{ needs.get-config.outputs.environment }}
          terraform_version: ${{ needs.get-config.outputs.terraform_version }}
          terraform_workingdir: ${{ needs.get-config.outputs.terraform_workingdir }}
          terraform_st_location: ${{ needs.get-config.outputs.terraform_st_location }}
          terraform_st_storage_account: ${{ needs.get-config.outputs.terraform_st_storage_account }}
          terraform_st_resource_group: ${{ needs.get-config.outputs.terraform_st_resource_group }}
          terraform_st_container_name: ${{ needs.get-config.outputs.terraform_st_container_name }}
          terraform_st_key: ${{ needs.get-config.outputs.terraform_st_key }}
          terraform_plan_location: ${{ needs.get-config.outputs.location }}
          terraform_plan_vnet: "TBD" # TBD

      - name: Set ACR Name
        run: echo "ACR_NAME=$(echo ${{ steps.call-terraform.outputs.acr_name }})" >> $GITHUB_ENV

  build-and-push:
    runs-on: ubuntu-latest
    needs: get-acr-name

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and push Docker images
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | sed 's/\//-/g')
          for service in service1 service2 service3; do
            docker build -t ${{ env.ACR_NAME }}.azurecr.io/$service:${BRANCH_NAME} -f $service/Dockerfile .
            docker push ${{ env.ACR_NAME }}.azurecr.io/$service:${BRANCH_NAME}
          done
