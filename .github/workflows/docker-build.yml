name: Build and Push Docker Images

on:
  pull_request:
    branches:
      - master

jobs:
  get-acr-name:
    runs-on: ubuntu-latest
    needs: [set-env-branch, get-config]
    uses: ./.github/workflows/tf-gha-install-terraform.yml
    with:
      TFAction: "output" # Here we use a custom action for just reading outputs
      dply_environment: ${{ needs.set-env-branch.outputs.config-file }}
      location: ${{ needs.get-config.outputs.location }}
      namespace: ${{ needs.get-config.outputs.namespace }}
      postfix: ${{ needs.get-config.outputs.postfix }}
      environment: ${{ needs.get-config.outputs.environment }}
      terraform_version: ${{ needs.get-config.outputs.terraform_version }}
      terraform_workingdir: ${{ needs.get-config.outputs.terraform_workingdir }}
      terraform_st_location: ${{ needs.get-config.outputs.terraform_st_location }}
      terraform_st_storage_account: ${{ needs.get-config.outputs.terraform_st_storage_account }}
      terraform_st_resource_group: ${{ needs.get-config.outputs.terraform_st_resource_group }}
      terraform_st_container_name: ${{ needs.get-config.outputs.terraform_st_container_name }}
      terraform_st_key: ${{ needs.get-config.outputs.terraform_st_key }}
      terraform_plan_location: ${{ needs.get-config.outputs.location }}
      terraform_plan_vnet: "TBD" # TBD
    secrets:
      azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
      clientId: ${{ secrets.ARM_CLIENT_ID }}
      clientSecret: ${{ secrets.ARM_CLIENT_SECRET }}
      subscriptionId: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      tenantId: ${{ secrets.ARM_TENANT_ID }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: get-acr-name

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR name from Terraform output
        id: get-acr-name
        working-directory: infrastructure
        run: |
          ACR_NAME=$(terraform output -raw name)
          echo "ACR_NAME=${ACR_NAME}" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker images
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | sed 's/\//-/g')
          for service in service1 service2 service3; do
            docker build -t $ACR_NAME.azurecr.io/$service:${BRANCH_NAME} -f $service/Dockerfile .
            docker push $ACR_NAME.azurecr.io/$service:${BRANCH_NAME}
          done
