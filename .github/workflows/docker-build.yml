name: Build and Push Docker Images

on:
  pull_request:
    branches:
      - master

jobs:
  get-acr-name:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: infrastructure
        run: |
          terraform -chdir=${{ inputs.terraform_workingdir }} init \
            -backend-config="storage_account_name=${{ secrets.TF_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="resource_group_name=${{ secrets.TF_RESOURCE_GROUP }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Output
        working-directory: infrastructure
        run: terraform output -json > output.json
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Extract ACR Name
        working-directory: infrastructure
        run: |
          ACR_NAME=$(jq -r .name.value output.json)
          echo "ACR_NAME=${ACR_NAME}" >> $GITHUB_ENV

  build-and-push:
    runs-on: ubuntu-latest
    needs: get-acr-name

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and push Docker images
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | sed 's/\//-/g')
          for service in service1 service2 service3; do
            docker build -t ${{ env.ACR_NAME }}.azurecr.io/$service:${BRANCH_NAME} -f $service/Dockerfile .
            docker push ${{ env.ACR_NAME }}.azurecr.io/$service:${BRANCH_NAME}
          done
