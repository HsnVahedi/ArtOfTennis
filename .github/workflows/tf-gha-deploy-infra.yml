




name: tf-gha-deploy-infra.yml

on:
  workflow_dispatch:
env:
  config_env: "none"
jobs:
  set-env-branch:
    runs-on: ubuntu-latest
    outputs:
      config-file: ${{ steps.set-output-defaults.outputs.config-file }}
    steps:
      - id: set-prod-branch
        name: set-prod-branch
        if: ${{ github.ref == 'refs/heads/main'}}
        run: echo "config_env=config-infra-prod.yml" >> $GITHUB_ENV;
      - id: set-dev-branch
        name: setdevbranch
        if: ${{ github.ref != 'refs/heads/main'}}
        run: echo "config_env=config-infra-dev.yml" >> $GITHUB_ENV;
      - id: set-output-defaults
        name: set-output-defaults
        run: |
          echo "config-file=$config_env" >> $GITHUB_OUTPUT;

  set-branch-name:
    runs-on: ubuntu-latest
    outputs:
      branch-name: ${{ steps.extract_branch.outputs.BRANCH_NAME }}
    steps:
      - name: Extract branch name
        id: extract_branch
        run: |
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

  get-config:
    needs: set-env-branch
    uses: Azure/mlops-templates/.github/workflows/read-yaml.yml@main
    with:
      file_name: ${{ needs.set-env-branch.outputs.config-file}}

  # get-latest-image-digest:
  #   runs-on: ubuntu-latest
  #   needs: set-branch-name
  #   outputs:
  #     latest_digest: ${{ steps.get_digest.outputs.latest_digest }}
  #   env:
  #     ACR_NAME: craota0002dev
  #   steps:
  #     - name: Log in to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Get the latest image digest
  #       id: get_digest
  #       run: |
  #         DIGEST=$(az acr repository show-manifests --name ${{ env.ACR_NAME }} --repository backend-${{ needs.set-branch-name.outputs.branch-name }} --query "[?tags[?contains(@, 'latest')]].digest" -o tsv)
  #         echo "latest_digest=${DIGEST}" >> $GITHUB_ENV
  #         echo "latest_digest=${DIGEST}" >> $GITHUB_OUTPUT

  deploy-azure-resources:
    # needs: [get-config, get-latest-image-digest, set-branch-name]
    needs: [get-config, set-branch-name]
    uses: ./.github/workflows/tf-gha-install-terraform.yml
    with:
      TFAction: "apply"
      dply_environment: ${{ needs.get-config.outputs.config-file }}
      location: ${{ needs.get-config.outputs.location }}
      namespace: ${{ needs.get-config.outputs.namespace }}
      postfix: ${{ needs.get-config.outputs.postfix }}
      environment: ${{ needs.get-config.outputs.environment }}
      terraform_version: ${{ needs.get-config.outputs.terraform_version }}
      terraform_workingdir: ${{ needs.get-config.outputs.terraform_workingdir }}
      terraform_st_location: ${{ needs.get-config.outputs.terraform_st_location }}
      terraform_st_storage_account: ${{ needs.get-config.outputs.terraform_st_storage_account }}
      terraform_st_resource_group: ${{ needs.get-config.outputs.terraform_st_resource_group }}
      terraform_st_container_name: ${{ needs.get-config.outputs.terraform_st_container_name }}
      terraform_st_key: ${{ needs.get-config.outputs.terraform_st_key }}
      terraform_plan_location: ${{ needs.get-config.outputs.location }}
      branch_name: ${{ needs.set-branch-name.outputs.branch-name }}
      image_digest: ${{ needs.get-latest-image-digest.outputs.latest_digest }}
    secrets:
      azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
      clientId: ${{ secrets.ARM_CLIENT_ID }}
      clientSecret: ${{ secrets.ARM_CLIENT_SECRET }}
      subscriptionId: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      tenantId: ${{ secrets.ARM_TENANT_ID }}
      # AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

